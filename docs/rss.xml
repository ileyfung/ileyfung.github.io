<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>leyfung</title><link>https://ileyfung.github.io</link><description>分享技术文章和工作当中有同样需求的功能实现思路与代码</description><copyright>leyfung</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://ileyfung.github.io</link></image><lastBuildDate>Tue, 09 Apr 2024 08:28:18 +0000</lastBuildDate><managingEditor>leyfung</managingEditor><ttl>60</ttl><webMaster>leyfung</webMaster><item><title>三方接口调用设计方案</title><link>https://ileyfung.github.io/post/san-fang-jie-kou-diao-yong-she-ji-fang-an.html</link><description>在为第三方系统提供接口的时候，肯定要考虑接口数据的安全问题，比如**数据是否被篡改**，**数据是否已经过时**，**数据是否可以重复提交**等问题&#13;
在设计三方接口调用的方案时，需要考虑到安全性和可用性。</description><guid isPermaLink="true">https://ileyfung.github.io/post/san-fang-jie-kou-diao-yong-she-ji-fang-an.html</guid><pubDate>Tue, 09 Apr 2024 08:27:38 +0000</pubDate></item><item><title>基于el-table实现行内增删改</title><link>https://ileyfung.github.io/post/ji-yu-el-table-shi-xian-xing-nei-zeng-shan-gai.html</link><description>## 实现效果：&#13;
&#13;
![在这里插入图片描述](https://img-blog.csdnimg.cn/direct/c6fd628003d145c3a0f1bb219c9e38dd.png)&#13;
&#13;
&#13;
## 核心代码：&#13;
&#13;
```html&#13;
&lt;el-table :data="items"&#13;
                  style="width: 100%;margin-top: 16px"&#13;
                  border&#13;
                  :key="randomKey"&gt;&#13;
          &lt;el-table-column label="计划名称"&#13;
                           property="name"&gt;&#13;
            &lt;template slot-scope="{row}"&gt;&#13;
              &lt;template v-if="row.edit"&gt;&#13;
                &lt;el-input v-model="row.name"&gt;&lt;/el-input&gt;&#13;
              &lt;/template&gt;&#13;
              &lt;span v-else&gt;{{ row.name }}&lt;/span&gt;&#13;
            &lt;/template&gt;&#13;
          &lt;/el-table-column&gt;&#13;
          &lt;el-table-column label="计划完成时间"&#13;
                           property="executionDate" width="175"&gt;&#13;
            &lt;template slot-scope="scope"&gt;&#13;
              &lt;el-date-picker v-if="scope.row.edit" style="width: 153px;" type="date"&#13;
                              v-model="scope.row.timeEnd"&gt;&#13;
              &lt;/el-date-picker&gt;&#13;
              &lt;span v-else&gt;{{ parseTime(scope.row.timeEnd) }}&lt;/span&gt;&#13;
            &lt;/template&gt;&#13;
          &lt;/el-table-column&gt;&#13;
          &lt;el-table-column label="协同人"&#13;
                           property="leaderList"&gt;&#13;
            &lt;template slot-scope="scope"&gt;&#13;
              &lt;template v-if="scope.row.edit"&gt;&#13;
                &lt;el-select&#13;
                  v-model="scope.row.leaderList"&#13;
                  clearable filterable multiple&gt;&#13;
                  &lt;el-option&#13;
                    v-for="item in userList"&#13;
                    :key="item.userId"&#13;
                    :label="item.nickname"&#13;
                    :value="item.userId"&gt;&#13;
                  &lt;/el-option&gt;&#13;
                &lt;/el-select&gt;&#13;
              &lt;/template&gt;&#13;
              &lt;span v-else&gt;{{ scope.row.leaderName }}&lt;/span&gt;&#13;
            &lt;/template&gt;&#13;
          &lt;/el-table-column&gt;&#13;
          &lt;el-table-column label="执行人" width="80"&gt;&#13;
            &lt;template&gt;&#13;
              &lt;span&gt;{{ $store.getters.name }}&lt;/span&gt;&#13;
            &lt;/template&gt;&#13;
          &lt;/el-table-column&gt;&#13;
          &lt;el-table-column align="center" label="操作" width="100"&gt;&#13;
            &lt;template slot-scope="{row,column,$index}"&gt;&#13;
              &lt;el-button&#13;
                v-if="row.edit"&#13;
                type="success" icon="el-icon-check" circle&#13;
                size="small"&#13;
                @click="confirmEdit(row)"&#13;
              &gt;&#13;
              &lt;/el-button&gt;&#13;
              &lt;el-button&#13;
                v-if="row.edit"&#13;
                icon="el-icon-close" circle&#13;
                size="small"&#13;
                @click="cancelEdit(row)"&#13;
              &gt;&#13;
              &lt;/el-button&gt;&#13;
              &lt;el-button&#13;
                type="primary" icon="el-icon-edit" circle&#13;
                v-if="!row.edit"&#13;
                size="small"&#13;
                @click="row.edit=!row.edit"&#13;
              &gt;&#13;
              &lt;/el-button&gt;&#13;
              &lt;el-button&#13;
                type="danger" icon="el-icon-delete" circle&#13;
                size="small" @click="handleDelete($index)"&#13;
                v-if="!row.edit"&#13;
              &gt;&#13;
              &lt;/el-button&gt;&#13;
            &lt;/template&gt;&#13;
          &lt;/el-table-column&gt;&#13;
        &lt;/el-table&gt;&#13;
      &lt;/div&gt;&#13;
      &lt;div style="display: flex;margin-top: 28px;justify-content: center;"&gt;&#13;
        &lt;el-button @click="addSon" size="small" icon="el-icon-plus"&gt;添加子计划&lt;/el-button&gt;&#13;
      &lt;/div&gt;&#13;
```&#13;
&#13;
## Method：&#13;
&#13;
```javascript&#13;
cancelEdit(row) {&#13;
      row.name = row.oldName&#13;
      row.leaderList = row.oldLeaderList&#13;
      row.timeEnd = row.oldTimeEnd&#13;
      row.leaderName = row.oldLeaderName&#13;
      row.edit = false&#13;
      this.$message({&#13;
        message: '已恢复原值',&#13;
        type: 'warning'&#13;
      })&#13;
    },&#13;
    confirmEdit(row) {&#13;
      row.edit = false&#13;
      row.oldName = row.name&#13;
      row.oldLeaderList = row.leaderList&#13;
      row.oldTimeEnd = row.timeEnd&#13;
      let arr = []&#13;
      row.leaderList.forEach(i =&gt; {&#13;
        let userName = this.userList.find(({userId}) =&gt; userId === i).nickname&#13;
        arr.push(userName)&#13;
      })&#13;
      row.leaderName = arr.join()&#13;
      row.oldLeaderName = row.leaderName&#13;
      this.$message({&#13;
        message: '修改成功',&#13;
        type: 'success'&#13;
      })&#13;
    },&#13;
    handleDelete(index) {&#13;
      this.items.splice(index, 1)&#13;
    },&#13;
    addSon() {&#13;
      this.items.push({&#13;
        name: null,&#13;
        timeEnd: null,&#13;
        leaderList: [],&#13;
        leaderName: null,&#13;
        edit: true&#13;
      })&#13;
    },&#13;
```&#13;
。</description><guid isPermaLink="true">https://ileyfung.github.io/post/ji-yu-el-table-shi-xian-xing-nei-zeng-shan-gai.html</guid><pubDate>Tue, 26 Mar 2024 13:35:09 +0000</pubDate></item><item><title>如何简化多个 if 的判断结构</title><link>https://ileyfung.github.io/post/ru-he-jian-hua-duo-ge-%20if%20-de-pan-duan-jie-gou.html</link><description>&gt; 编程实践中，往往连续使用多个 if 进行判断，这种代码非常冗余，也不易读，本文讨论怎么简化它。</description><guid isPermaLink="true">https://ileyfung.github.io/post/ru-he-jian-hua-duo-ge-%20if%20-de-pan-duan-jie-gou.html</guid><pubDate>Sun, 24 Mar 2024 02:46:35 +0000</pubDate></item></channel></rss>